services:
  postgres:
    image: postgres:14
    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: airflow_db 
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

  airflow-init:
    image: ${AIRFLOW_IMAGE}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Seoul
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB_AIRFLOW}
      TZ: ${TZ}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    entrypoint: /bin/bash
    command: >
      -c "airflow db init &&
          airflow users create
            --username admin --password admin
            --firstname admin --lastname user
            --role Admin --email admin@example.com"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./django_app:/opt/django

  airflow-webserver:
    image: ${AIRFLOW_IMAGE}
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Seoul
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB_AIRFLOW}
      TZ: ${TZ}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./django_app:/opt/django

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE}
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Seoul
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB_AIRFLOW}
      TZ: ${TZ}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./django_app:/opt/django

  django:
    build:
      context: ./django_app
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: "dev-secret"
      DJANGO_DEBUG: "1"
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_DB_NAME: ${POSTGRES_DB_DJANGO}
      DJANGO_DB_USER: ${POSTGRES_USER}
      DJANGO_DB_PASSWORD: ${POSTGRES_PASSWORD}
      DJANGO_DB_HOST: postgres
      DJANGO_DB_PORT: "5432"
      TZ: ${TZ}
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./django_app:/app

volumes:
  pgdata:
